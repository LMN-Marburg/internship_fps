digraph structs {
node [shape=record];
work_preprocessingselectfiles [label="{IN}|{ selectfiles | io |  }|{OUT|<outbrain> brain|<outfunc> func|<outribbonlh> ribbon_lh|<outribbonrh> ribbon_rh|<outwh> wh}"];
work_preprocessingconvert_ribbon_rh [label="{IN|<inimage> image}|{ convert_ribbon_rh | utility |  }|{OUT|<outribbonrh> ribbon_rh}"];
work_preprocessingconvert_ribbon_lh [label="{IN|<inimage> image}|{ convert_ribbon_lh | utility |  }|{OUT|<outribbonlh> ribbon_lh}"];
work_preprocessingconcat_ribbon [label="{IN|<ininfile> in_file|<ininfile2> in_file2}|{ concat_ribbon | fsl |  }|{OUT|<outoutfile> out_file}"];
work_preprocessingresample [label="{IN|<ininfile> in_file|<inreference> reference}|{ resample | fsl |  }|{OUT|<outoutfile> out_file}"];
work_preprocessingcompute_mean_wh [label="{IN|<inimage> image}|{ compute_mean_wh | utility |  }|{OUT|<outmeanimage> mean_image}"];
work_preprocessingconvert_mgh [label="{IN|<inimage> image}|{ convert_mgh | utility |  }|{OUT|<outantimagenii> ant_image_nii}"];
work_preprocessingcoreg_wh [label="{IN|<ininfile> in_file|<inreference> reference}|{ coreg_wh | fsl |  }|{OUT|<outoutmatrixfile> out_matrix_file}"];
work_preprocessingmo_correct [label="{IN|<ininfile> in_file}|{ mo_correct | fsl |  }|{OUT|<outmeanimg> mean_img|<outoutfile> out_file|<outparfile> par_file}"];
work_preprocessingcoreg_slab [label="{IN|<ininfile> in_file|<inreference> reference}|{ coreg_slab | fsl |  }|{OUT|<outoutmatrixfile> out_matrix_file}"];
work_preprocessingmerge_trans [label="{IN|<ininfile> in_file|<ininfile2> in_file2}|{ merge_trans | fsl |  }|{OUT|<outoutfile> out_file}"];
work_preprocessingapplywarp [label="{IN|<ininfile> in_file|<ininmatrixfile> in_matrix_file|<inreference> reference}|{ applywarp | fsl |  }|{OUT|<outoutfile> out_file}"];
work_preprocessingsusan [label="{IN|<ininputnodeinfiles> inputnode.in_files|<ininputnodemaskfile> inputnode.mask_file}|{ susan |  |  }|{OUT|<outoutputnodesmoothedfiles> outputnode.smoothed_files}"];
work_preprocessingmask_gm [label="{IN|<ininfile> in_file|<inmaskfile> mask_file}|{ mask_gm | fsl |  }|{OUT|<outoutfile> out_file}"];
work_preprocessingdetrend [label="{IN|<ininfile> in_file}|{ detrend | confounds |  }|{OUT}"];
work_preprocessingarti_correct [label="{IN|<inrealignedfiles> realigned_files|<inrealignmentparameters> realignment_parameters}|{ arti_correct | rapidart |  }|{OUT}"];
work_preprocessingapplywarp:outoutfile:e -> work_preprocessingsusan:ininputnodeinfiles:w;
work_preprocessingcompute_mean_wh:outmeanimage:e -> work_preprocessingcoreg_slab:inreference:w;
work_preprocessingcompute_mean_wh:outmeanimage:e -> work_preprocessingcoreg_wh:ininfile:w;
work_preprocessingconcat_ribbon:outoutfile:e -> work_preprocessingresample:ininfile:w;
work_preprocessingconcat_ribbon:outoutfile:e -> work_preprocessingresample:inreference:w;
work_preprocessingconvert_mgh:outantimagenii:e -> work_preprocessingapplywarp:inreference:w;
work_preprocessingconvert_mgh:outantimagenii:e -> work_preprocessingcoreg_wh:inreference:w;
work_preprocessingconvert_ribbon_lh:outribbonlh:e -> work_preprocessingconcat_ribbon:ininfile:w;
work_preprocessingconvert_ribbon_rh:outribbonrh:e -> work_preprocessingconcat_ribbon:ininfile2:w;
work_preprocessingcoreg_slab:outoutmatrixfile:e -> work_preprocessingmerge_trans:ininfile:w;
work_preprocessingcoreg_wh:outoutmatrixfile:e -> work_preprocessingmerge_trans:ininfile2:w;
work_preprocessingmask_gm:outoutfile:e -> work_preprocessingdetrend:ininfile:w;
work_preprocessingmerge_trans:outoutfile:e -> work_preprocessingapplywarp:ininmatrixfile:w;
work_preprocessingmo_correct:outmeanimg:e -> work_preprocessingcoreg_slab:ininfile:w;
work_preprocessingmo_correct:outoutfile:e -> work_preprocessingapplywarp:ininfile:w;
work_preprocessingmo_correct:outoutfile:e -> work_preprocessingarti_correct:inrealignedfiles:w;
work_preprocessingmo_correct:outparfile:e -> work_preprocessingarti_correct:inrealignmentparameters:w;
work_preprocessingresample:outoutfile:e -> work_preprocessingmask_gm:inmaskfile:w;
work_preprocessingresample:outoutfile:e -> work_preprocessingsusan:ininputnodemaskfile:w;
work_preprocessingselectfiles:outbrain:e -> work_preprocessingconvert_mgh:inimage:w;
work_preprocessingselectfiles:outfunc:e -> work_preprocessingmo_correct:ininfile:w;
work_preprocessingselectfiles:outribbonlh:e -> work_preprocessingconvert_ribbon_lh:inimage:w;
work_preprocessingselectfiles:outribbonrh:e -> work_preprocessingconvert_ribbon_rh:inimage:w;
work_preprocessingselectfiles:outwh:e -> work_preprocessingcompute_mean_wh:inimage:w;
work_preprocessingsusan:outoutputnodesmoothedfiles:e -> work_preprocessingmask_gm:ininfile:w;
}